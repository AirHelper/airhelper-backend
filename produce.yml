version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-prod
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - .:/app
      - ./backend/static:/static
      - ./backend/media:/media
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    expose:
      - "8000"
    networks:
      - webnet
      - redisnet
    links:
      - redis
#  django_wsgi:
#    container_name: django_wsgi
#    build: .
#    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
#    volumes:
#      - .:/code
#    networks:
#      - webnet
#      - redisnet
#    links:
#      - redis

  django_asgi:
    container_name: django_asgi
    build: .
    command: daphne -b 0.0.0.0 -p 9000 backend.asgi:application
    volumes:
      - .:/code
    networks:
      - webnet
      - redisnet
    links:
      - redis

  nginx:
    image: nginx:latest # nginx 서비스에서 사용할 도커 이미지
    ports:
      - "80:80"
    volumes:
      - .:/app
      - ./config/nginx:/etc/nginx/conf.d
      - ./backend/static:/static
      - ./backend/media:/media
    depends_on: # 서비스 간의 종속성 표현
      - django_wsgi
      - django_asgi
    networks:
      - webnet

  redis:
    container_name: redis_service
    image: redis
    command: --appendonly yes
    ports:
      - "6379:6379"
    networks:
      - redisnet

volumes:
  static:

networks:
  webnet:
  redisnet:
